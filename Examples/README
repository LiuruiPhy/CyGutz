Examples

./CyGutz

1. Ce_SOC_NJ_F03
   Purpose: Test CyGutz
   System:  alpha-Ce considering spin-orbit interaction (SOI) with continuous symmetry (N,J^2) for {\phi}
   Run:     ${WIEN_GUTZ_ROOT}/CyGutz
   Check:   GUTZ.LOG vc REF_GUTZ.LOG
   Note:    Files generated by the Wien2K-CyGutz interface and the python script. 
            a) GL.INP:     Main INPUT FILE
            b) BNDU_0.INP: <Psi_KS|Local Orbital> 
            c) Ce.kgen:    k-point generation files for the linear tetrahedron method.

1.1 Ce_SOC_NJ_F02
    Purpose: Test CyGutz
    System:  alpha-Ce considering SOI with continuous symmetry (N,J^2) for {\phi}
    Run:     ${WIEN_GUTZ_ROOT}/CyGutz
    Check:   GUTZ.LOG vc REF_GUTZ.LOG
    Note:    Files generated by the Wien2K-CyGutz interface and the python script.
             a) GL.INP:     Main INPUT FILE. Note valence trancation f0-f2 instead of f0-f3.
             b) BNDU_0.INP: <Psi_KS|Local Orbital>
             c) Ce.kgen:    k-point generation files for the linear tetrahedron method.

1.2 Ce_SOC_N_NOCF_F02
    Purpose: Test CyGutz
    System:  alpha-Ce considering SOI without continuous symmetry for {\phi}
    Run:     ${WIEN_GUTZ_ROOT}/CyGutz
    Check:   GUTZ.LOG vc REF_GUTZ.LOG
    Note:    Files generated by the Wien2K-CyGutz interface and the python script.
             a) GL.INP:     Main INPUT FILE. Note valence trancation f0-f2 instead of f0-f3.
             b) BNDU_0.INP: <Psi_KS|Local Orbital>
             c) Ce.kgen:    k-point generation files for the linear tetrahedron method.

1.3 Ce_SOC_N_CF_F02
    Purpose: Test CyGutz
    System:  alpha-Ce considering SOI and crystal field (CF) without continuous symmetry for {\phi}
    Run:     ${WIEN_GUTZ_ROOT}/CyGutz
    Check:   GUTZ.LOG vc REF_GUTZ.LOG
    Note:    Files generated by the Wien2K-CyGutz interface and the python script.
             a) GL.INP:     Main INPUT FILE. Note valence trancation f0-f2 instead of f0-f3.
             b) BNDU_0.INP: <Psi_KS|Local Orbital>
             c) Ce.kgen:    k-point generation files for the linear tetrahedron method.
             d) WH_N2N.INP: Transformation matrix from relativistic spherical Harmonics to the cubic symmetry adapted basis.
             e) GLX.OUT:    Final converged solution. Try "cp GLX.OUT GLX.INP" for a 1-step convergence.

2. Ce_NOSOC_NSz_NOCF_F03
   Purpose: Test CyGutz
   System:  alpha-Ce without spin-orbit interaction and with continuous symmetry (N,Sz) for {\phi} without considering crystal field
   Run:     ${WIEN_GUTZ_ROOT}/CyGutz
   Check:   GUTZ.LOG vc REF_GUTZ.LOG
   Note:    Files generated by the Wien2K-CyGutz interface and the python script.
            a) GL.INP:     Main INPUT FILE
            b) BNDU_0.INP: <Psi_KS|Local Orbital>
            c) Ce.kgen:    k-point generation files for the linear tetrahedron method.

2.1 Ce_NOSOC_NJ_F03
    Purpose: Test CyGutz
    System:  alpha-Ce without spin-orbit interaction and with continuous symmetry (N,J^2) for {\phi}
    Run:     ${WIEN_GUTZ_ROOT}/CyGutz
    Check:   GUTZ.LOG vc REF_GUTZ.LOG
    Note:    Files generated by the Wien2K-CyGutz interface and the python script.
             a) GL.INP:     Main INPUT FILE
             b) BNDU_0.INP: <Psi_KS|Local Orbital>
             c) Ce.kgen:    k-point generation files for the linear tetrahedron method.
             d) WH_N2N.INP: Complex spherical Harmonics (l,ml,s,ms) to relativistic spherical Harmonics (j,jm) transformation matrix 

2.1 Ce_NOSOC_NSz_CF_F03
    Purpose: Test CyGutz
    System:  alpha-Ce without spin-orbit interaction and with continuous symmetry (N,Sz) for {\phi} and considering crystal field
    Run:     ${WIEN_GUTZ_ROOT}/CyGutz
    Check:   GUTZ.LOG vc REF_GUTZ.LOG
    Note:    Files generated by the Wien2K-CyGutz interface and the python script.
             a) GL.INP:     Main INPUT FILE
             b) BNDU_0.INP: <Psi_KS|Local Orbital>
             c) Ce.kgen:    k-point generation files for the linear tetrahedron method.
 
./Wien2K+GA
1. Ce_SOC_NJ_F03: LDA+GA self-consistent run with GA parameters same as that in ./CyGutz/Ce_SOC_NJ_F03
   

